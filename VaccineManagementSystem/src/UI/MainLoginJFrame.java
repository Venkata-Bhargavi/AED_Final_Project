/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UI;

import Business.DB4OUtil.DB4OUtil;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.EventOrganisation;
import Business.Organization.Organization;
import Business.SubOrganization.SubOrganization;
import Business.UserAccount.UserAccount;
import UI.SystemAdminWorkArea.SystemAdminWorkArea;
import java.awt.CardLayout;
import java.awt.Image;
import java.nio.file.Paths;
import static java.time.Clock.system;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
/**
 *
 * @author Krishnakanth Naik Jarapala
 */
public class MainLoginJFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainLoginJFrame
     */
    private EcoSystem system;
    private DB4OUtil dB4OUtil = DB4OUtil.getInstance();
    private Network network;
    private static final String FILENAME = Paths.get("src").toAbsolutePath().toString();// path to the data store
    private String imagePath = FILENAME+"/Images/my-gradient.png";

    private static final String logoFILENAME = Paths.get("src").toAbsolutePath().toString();// path to the data store
    private String logoImagePath = logoFILENAME+"/Images/vaccine_logo.png";

//    /Users/bhargavi/VenkataBhargavi-Sikhakolli-002724793/AED_FINAL_PROJECT/AED_Final_Project/VaccineManagementSystem/vaccine main page.jpeg
    public MainLoginJFrame(){
        initComponents();
        system = dB4OUtil.retrieveSystem();
//        setExtendedState(JFrame.MAXIMIZED_BOTH);
        setVisible(true);
        ImageIcon imgIcon = new ImageIcon(imagePath);
        Image i = imgIcon.getImage();
        Image dimg = i.getScaledInstance(1010, 550,Image.SCALE_SMOOTH);

        ImageIcon imgThisImg = new ImageIcon(dimg);
        lblBG.setIcon(imgThisImg);
        
        ImageIcon logoimgIcon = new ImageIcon(logoImagePath);
        Image lI = logoimgIcon.getImage();
        Image logoDimg = lI.getScaledInstance(100, 100,Image.SCALE_SMOOTH);
        ImageIcon logoImgThisImg = new ImageIcon(logoDimg);
        lblIcon.setIcon(logoImgThisImg);
        

    }
    
    public MainLoginJFrame(EcoSystem system,Network network) {
        initComponents();
//        Storing the data to database
        setVisible(true);
         ImageIcon imgIcon = new ImageIcon(imagePath);
        Image i = imgIcon.getImage();
        Image dimg = i.getScaledInstance(1010, 550,Image.SCALE_SMOOTH);
        
        ImageIcon imgThisImg = new ImageIcon(dimg);
        lblBG.setIcon(imgThisImg);
        
        ImageIcon logoimgIcon = new ImageIcon(logoImagePath);
        Image lI = logoimgIcon.getImage();
        Image logoDimg = lI.getScaledInstance(100, 100,Image.SCALE_SMOOTH);
        ImageIcon logoImgThisImg = new ImageIcon(logoDimg);
        lblIcon.setIcon(logoImgThisImg);
        
        
        this.system = system;
        dB4OUtil.storeSystem(system);
//        setExtendedState(JFrame.MAXIMIZED_BOTH);
        
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        titlebox = new javax.swing.JLabel();
        txt_username = new javax.swing.JTextField();
        pass_password = new javax.swing.JPasswordField();
        btn_login = new javax.swing.JButton();
        lblLogin = new javax.swing.JLabel();
        lblG = new javax.swing.JLabel();
        lblIcon = new javax.swing.JLabel();
        lblBG = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        titlebox.setFont(new java.awt.Font("Cochin", 1, 24)); // NOI18N
        titlebox.setForeground(new java.awt.Color(255, 255, 255));
        titlebox.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titlebox.setText("Vaccine Inventory Management");
        jPanel1.add(titlebox, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 10, 470, 60));

        txt_username.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        txt_username.setForeground(new java.awt.Color(204, 204, 204));
        jPanel1.add(txt_username, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 160, 208, 30));

        pass_password.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        pass_password.setForeground(new java.awt.Color(204, 204, 204));
        pass_password.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pass_passwordActionPerformed(evt);
            }
        });
        jPanel1.add(pass_password, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 220, 208, 30));

        btn_login.setBackground(new java.awt.Color(204, 204, 204));
        btn_login.setText("Login");
        btn_login.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn_login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_loginActionPerformed(evt);
            }
        });
        jPanel1.add(btn_login, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 290, 210, 30));

        lblLogin.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblLogin.setForeground(new java.awt.Color(255, 255, 255));
        lblLogin.setText("Login");
        jPanel1.add(lblLogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 110, 50, -1));

        lblG.setBackground(new java.awt.Color(14, 29, 49));
        lblG.setForeground(new java.awt.Color(204, 204, 204));
        jPanel1.add(lblG, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 80, 350, 440));
        jPanel1.add(lblIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 450, 130, 110));
        jPanel1.add(lblBG, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1040, 570));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pass_passwordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pass_passwordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pass_passwordActionPerformed

    private void btn_loginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_loginActionPerformed
        // TODO add your handling code here:
        
//        String role = comboBox_roleMenu.getSelectedItem().toString();
        
//        for(Patient pat: patientlist.getPatientlist()){
//            this.patientCred.put(pat.getUsername(), pat.getPassword());
//        }
//        
//        for(Doctor doc: doctorlist.getDoctorlist()){
//            this.doctorCred.put(doc.getUsername(), doc.getPassword());
//        }
        //doctorCred = doctorlist.getDoctorCredentails();
        //patientCred = patientlist.getPatientCredentails();
        
        
//        if((role.equals("System Admin")) && (txt_username.getText().equals("admin"))  && (pass_password.getText().equals("admin"))){
//            this.setVisible(false);
//            SystemAdminWorkArea sa = new SystemAdminWorkArea(system);
////            JOptionPane.showMessageDialog(this, "USER Credentials are correct!");
//            sa.setVisible(true);
//        }

        if (txt_username.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter Login Name.");
        } else if (pass_password.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter Login Password.");
        } 
        else {

            // Get user name
            String userName = txt_username.getText();
            String password = pass_password.getText();

            //Checking whether is user is an instance of enterprise.
            UserAccount userAccount = system.getUserAccountDirectory().authenticateUser(userName, password);
            // Initilizing the enterprise, org, suborg and user as null as we don't yet know where the user is working.
            UserAccount userAccounttoFind = null;
            Enterprise userEnterprise = null;
            Organization userOrganization = null;
            SubOrganization userSubOrganization = null;

            //            Loop to find whether the user is in Enterprise / Org / Suborg
            if(userAccount == null){
                //                if the user is not found, then checking in each enterprise by each network
                for(Network network: system.getNetworkList()){
                    for(Enterprise ent: network.getEnterpriseDirectory().getEnterpriseList()){
                        userAccount = ent.getUserAccountDirectory().authenticateUser(userName, password);
                        if (userAccount == null) {
                            //if user is not found in the enterprse, we drill down into each each organization for each enterprise
                            for (Organization org : ent.getOrganizationDirectory().getOrganizationList()) {
                                userAccount = org.getUserAccountDirectory().authenticateUser(userName, password);
                                if (userAccount == null) {
                                    if (org instanceof EventOrganisation && ((EventOrganisation) org).getEventSubOrganizationDirectory().getOrganizationList() != null) {
                                        // Similarly, checking in the suborg of each org.
                                        for (SubOrganization subOrganization : ((EventOrganisation) org).getEventSubOrganizationDirectory().getOrganizationList()) {
                                            userAccount = subOrganization.getUserAccountDirectory().authenticateUser(userName, password);
                                            if (userAccount != null) {
                                                userAccounttoFind = userAccount;
                                                userEnterprise = ent;
                                                userOrganization = org;
                                                this.network = network;
                                                userSubOrganization = subOrganization;
                                                System.out.println("organization ia an instance of EventOrganisation" + userAccount.getRole());
                                                System.out.println("organization is an instance of EventOrganisation" + userEnterprise);
                                                System.out.println("organization is an instance of EventOrganisation" + userSubOrganization);
                                                //System.out.println("organization instanceof EventOrganisation");
                                                break;
                                            }
                                        }
                                    }
                                    //                                    User found in a organization, so must be working in thespecific organization
                                    else if (userAccount != null) {
                                        userEnterprise = ent;
                                        userOrganization = org;
                                        this.network = network;
                                        System.out.println("organization is an instance of EventOrganisation" + userAccount.getRole());
                                        break;
                                        //}
                                }
                            } else if (userAccount != null) {
                                userEnterprise = ent;
                                userOrganization = org;
                                this.network = network;
                                break;
                            }
                        }
                    }
                    //                        Found the user in enterprise
                    else {
                        userEnterprise = ent;
                        this.network = network;
                        break;
                    }
                    if (userOrganization != null) {
                        break;
                    }
                }
                if (userEnterprise != null) {
                    break;
                }
                }
            }

//        if(userAccount == null && userAccounttoFind == null){
//            JOptionPane.showMessageDialog(null, "User not Found!, Please check Credentails!");
//            return;
//        }
//        else if(userAccount == null && userAccounttoFind != null){
//            JFrame workArea = userAccounttoFind.getRole().createWorkArea( userAccounttoFind, userOrganization, userEnterprise, system, network);
//            workArea.setVisible(true);
//            setVisible(false);
//        }
//        else{
//            JOptionPane.showMessageDialog(null, "valid Credentails!");
//            JFrame workArea = userAccount.getRole().createWorkArea( userAccounttoFind, userOrganization, userEnterprise, system, network);
//            workArea.setVisible(true);
//            setVisible(false);
//
//        }
            if (userAccount == null) {
                if (userAccounttoFind == null) {
                    JOptionPane.showMessageDialog(null, "Invalid Credentails!");
                    return;
                } else {
//                    CardLayout layout = (CardLayout) container.getLayout();
//                    container.add("workArea", ua.getRole().createWorkArea(container, ua, inOrganization, inEnterprise, system, network));
//                    layout.next(container);
                        JFrame workArea = userAccounttoFind.getRole().createWorkArea( userAccounttoFind, userOrganization, userEnterprise, system, network);
                        workArea.setVisible(true);
                        setVisible(false);
                }

            } else {
//                CardLayout layout = (CardLayout) container.getLayout();
//                container.add("workArea", userAccount.getRole().createWorkArea(container, userAccount, inOrganization, inEnterprise, system, network));
//                layout.next(container);
                
                JFrame workArea = userAccount.getRole().createWorkArea( userAccount, userOrganization, userEnterprise, system, network);
                        workArea.setVisible(true);
                        setVisible(false);
            }
    }//GEN-LAST:event_btn_loginActionPerformed
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainLoginJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainLoginJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainLoginJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainLoginJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainLoginJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_login;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblBG;
    private javax.swing.JLabel lblG;
    private javax.swing.JLabel lblIcon;
    private javax.swing.JLabel lblLogin;
    private javax.swing.JPasswordField pass_password;
    private javax.swing.JLabel titlebox;
    private javax.swing.JTextField txt_username;
    // End of variables declaration//GEN-END:variables
}
