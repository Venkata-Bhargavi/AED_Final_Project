/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.SystemAdminWorkArea;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.HospitalEnterprise;
import Business.Enterprise.PHDEnterprise;
import Business.Network.Network;
import Business.WorkQueue.PHDHospitalApproval;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author bhargavi
 */
public class ManageEnterpriseJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageEnterpriseJPanel
     */
    EcoSystem system;
    JPanel workArea;
    public ManageEnterpriseJPanel(EcoSystem sys, JPanel workArea) {
        initComponents();
        this.workArea = workArea;
;
        this.system = sys;
        
        populateEntTable();
        populateComboBoxes();
    }
    private void populateEntTable() {
        DefaultTableModel model = (DefaultTableModel) tblEnt.getModel();

        model.setRowCount(0);
        for (Network network : system.getNetworkList()) {
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                Object[] row = new Object[3];
                row[0] = enterprise.getName();
                row[1] = network.getName();
                row[2] = enterprise.getEnterpriseType().getValue();

                model.addRow(row);
            }
        }
    }

    private void populateComboBoxes() {
        cbNetwork.removeAllItems();
        cbEnterpriseName.removeAllItems();
        
        
        for (Network network : system.getNetworkList()) {
            cbNetwork.addItem(network);
        }
        
        for (Enterprise.EnterpriseType type : Enterprise.EnterpriseType.values()) {
            cbEnterpriseName.addItem(type);
        }
        


    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblEnt = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cbNetwork = new javax.swing.JComboBox();
        cbEnterpriseName = new javax.swing.JComboBox();
        txtName = new javax.swing.JTextField();
        btnSubmit = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        jLabel1.setText("Manage Enterprise");

        tblEnt.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Enterprise Name", "Network", "Type"
            }
        ));
        jScrollPane1.setViewportView(tblEnt);

        jLabel2.setText("Network :");

        jLabel3.setText("Enterprise Type :");

        jLabel4.setText("Name :");

        cbEnterpriseName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbEnterpriseNameActionPerformed(evt);
            }
        });

        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(232, 232, 232)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4))
                                .addGap(120, 120, 120)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbEnterpriseName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbNetwork, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addComponent(jLabel1))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(357, 357, 357)
                        .addComponent(btnSubmit)))
                .addContainerGap(207, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 498, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cbEnterpriseName, cbNetwork, txtName});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel1)
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cbNetwork, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cbEnterpriseName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addComponent(btnSubmit)
                .addContainerGap(371, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        
        
        
        if (txtName.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter Enterprise Name.");
        } else {

            Network network = (Network) cbNetwork.getSelectedItem();
            Enterprise.EnterpriseType type = (Enterprise.EnterpriseType) cbEnterpriseName.getSelectedItem();

            if (network == null || type == null) {
                JOptionPane.showMessageDialog(null, "Invalid Input!");
                return;
            }
            /// if trying to Create hospital check for PHD existance.
            boolean typeHospital = false;
            PHDEnterprise phde = null;
            int count = 0;
            if (type.equals(Enterprise.EnterpriseType.Hospital)) {
                typeHospital = true;
                for (Enterprise enterprisePHD : network.getEnterpriseDirectory().getEnterpriseList()) {
                    if (enterprisePHD instanceof PHDEnterprise) {
                        //((PHDEnterprise) enterprisePHD).getHospitalApprovalArrayList().);
                        phde = (PHDEnterprise) enterprisePHD;
                        count++;
                        //return;
                    }
                }
            } else {
                String name = txtName.getText().toUpperCase();
                Enterprise enterprise = network.getEnterpriseDirectory().createAndAddEnterprise(type, name);
            }
            
            
//          If the enterprise is hospital then check for PHD existance then create approval request for the hospital.

            if (typeHospital) {
                if (phde == null) {
                    JOptionPane.showMessageDialog(null, "Kindly create PHD Enterprise first");
                } else if (phde != null && typeHospital && count == 1) {
                    String name = txtName.getText().toUpperCase();
//                    System.out.println("Hospital Name " + name);
                    Enterprise enterprise = network.getEnterpriseDirectory().createAndAddEnterprise(type, name);
                    HospitalEnterprise hospitalEnterprise = (HospitalEnterprise) enterprise;

                    PHDHospitalApproval phdHospitalApproval = new PHDHospitalApproval();
                    phdHospitalApproval.setHospitalEnterprise((HospitalEnterprise) hospitalEnterprise);
                    ((HospitalEnterprise) hospitalEnterprise).setHospitalApproved(false);
                    phdHospitalApproval.setHospitalStatus("Waiting for PHD Approval");
                    phde.getHospitalApprovalList().add(phdHospitalApproval);
                }
            }
            txtName.setEnabled(true);
            txtName.setText("");
            populateEntTable();
            JOptionPane.showMessageDialog(null, "Enterprise added successfully.", "Warning", JOptionPane.INFORMATION_MESSAGE);
        }
        
        
        
//        if (txtName.getText().equals("")) {
//            JOptionPane.showMessageDialog(null, "Please enter the Enterprise Name!");
//        } else {
//
//            Network network = (Network) cbNetwork.getSelectedItem();
//            Enterprise.EnterpriseType type = (Enterprise.EnterpriseType) cbEnterpriseName.getSelectedItem();
//
//            if (network == null || type == null) {
//                JOptionPane.showMessageDialog(null, "Please select Network and Enterprise.");
//                return;
//            }
//            
//            /// if trying to Create hospital check for PHD existance.
//            boolean typeHospital = false;
//            PHDEnterprise phde = null;
//            int count = 0;
//            
////            Checking the Hospital Enterprise
//            if (type.equals(Enterprise.EnterpriseType.Hospital)) {
//                typeHospital = true;
//                for (Enterprise enterprisePHD : network.getEnterpriseDirectory().getEnterpriseList()) {
//                    if (enterprisePHD instanceof PHDEnterprise) {
//                        //((PHDEnterprise) enterprisePHD).getHospitalApprovalArrayList().);
//                        phde = (PHDEnterprise) enterprisePHD;
//                        count++;
//                        //return;
//                    }
//                }
//            }
//            else {
//                String name = txtName.getText();
//                Enterprise enterprise = network.getEnterpriseDirectory().createAndAddEnterprise(type, name);
//            }
//            
////            If the enterprise is hospital then check for PHD existance then create approval request for the hospital.
//            if (typeHospital) {
//                if (phde == null) {
//                    JOptionPane.showMessageDialog(null, "Kindly create a PHD Enterprise before creating a Hospital.");
//                } else if (phde != null && typeHospital && count == 1) {
//                    String name = txtName.getText();
//                    Enterprise enterprise = network.getEnterpriseDirectory().createAndAddEnterprise( type, name);
//                    HospitalEnterprise hospitalEnterprise = (HospitalEnterprise) enterprise;
//
//                    PHDHospitalApproval phdHospitalApproval = new PHDHospitalApproval();
//                    phdHospitalApproval.setHospitalEnterprise((HospitalEnterprise) hospitalEnterprise);
//                    ((HospitalEnterprise) hospitalEnterprise).setHospitalApproved(false);
//                    phdHospitalApproval.setHospitalStatus("Requested to PHD for Approval of the Hospital!");
//                    phde.getHospitalApprovalList().add(phdHospitalApproval);
//                }
//            }
//            txtName.setText("");
//            cbNetwork.setSelectedIndex(-1);
//            cbEnterpriseName.setSelectedIndex(-1);
//
//            populateEntTable();
//            JOptionPane.showMessageDialog(null, "Enterprise added successfully.", "Warning", JOptionPane.INFORMATION_MESSAGE);
//        }
        
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void cbEnterpriseNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbEnterpriseNameActionPerformed
        // TODO add your handling code here:
        if((cbEnterpriseName.getSelectedItem().toString() == "CDC") || (cbEnterpriseName.getSelectedItem().toString() == "PHD") ){
            txtName.setEnabled(false);
            txtName.setText(cbEnterpriseName.getSelectedItem().toString());
            
        }
        else{
            txtName.setEnabled(true);
            txtName.setText("");
        }
    }//GEN-LAST:event_cbEnterpriseNameActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSubmit;
    private javax.swing.JComboBox cbEnterpriseName;
    private javax.swing.JComboBox cbNetwork;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblEnt;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables
}
