/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.SystemAdminWorkArea;

import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Role.CDCAdminRole;
import Business.Role.DistributorAdminRole;
import Business.Role.HospitalAdminRole;
import Business.Role.InsuaranceAdminRole;
import Business.Role.PHDAdminRole;
import Business.UserAccount.UserAccount;
import java.awt.Image;
import java.nio.file.Paths;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author bhargavi
 */
public class ManageEnterpriseAdminJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageEnterpriseAdminJPanel
     */
    EcoSystem system;
    JPanel workArea;
    
     private static final String AFILENAME = Paths.get("src").toAbsolutePath().toString();// path to the data store
    private String aimagePath = AFILENAME+"/Images/enterprise_admin_icon.png";
    public ManageEnterpriseAdminJPanel(EcoSystem sys, JPanel workArea) {
        initComponents();
        this.workArea = workArea;

        this.system = sys;
        populateTable();
        populateCBNetwork();
        ImageIcon aimgIcon = new ImageIcon(aimagePath);
        Image aI = aimgIcon.getImage();
        Image aDimg = aI.getScaledInstance(90, 90,Image.SCALE_SMOOTH);
        ImageIcon aImgThisImg = new ImageIcon(aDimg);
        lblI.setIcon(aImgThisImg);
    }
    
    
    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblEnterprise.getModel();

        model.setRowCount(0);
        for (Network network : system.getNetworkList()) {
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                for (UserAccount userAccount : enterprise.getUserAccountDirectory().getUserAccountList()) {
                    Object[] row = new Object[3];
                    row[0] = enterprise.getName();
                    row[1] = network.getName();
                    row[2] = userAccount.getUsername();
                    model.addRow(row);
                }
            }
        }
    }

    private void populateCBNetwork(){
        cbNet.removeAllItems();
        
        for (Network network : system.getNetworkList()){
            cbNet.addItem(network);
        }
    }
    
    private void populateCBEnterprise(Network network){
        cbEnter.removeAllItems();
        
        for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()){
            cbEnter.addItem(enterprise);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblEnterprise = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cbNet = new javax.swing.JComboBox();
        cbEnter = new javax.swing.JComboBox();
        txtUN = new javax.swing.JTextField();
        txtPwd = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        btnSubmit = new javax.swing.JButton();
        lblPwdValid = new javax.swing.JLabel();
        lblUN = new javax.swing.JLabel();
        lblI = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1100, 800));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 156, 141));
        jLabel1.setText("Create Enterprise Account");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(393, 14, -1, -1));

        tblEnterprise.setBackground(new java.awt.Color(255, 156, 141));
        tblEnterprise.setForeground(new java.awt.Color(255, 255, 255));
        tblEnterprise.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Enterprise Name", "Network", "User Name"
            }
        ));
        jScrollPane1.setViewportView(tblEnterprise);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(267, 99, 557, 128));

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Network :");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(309, 248, 146, -1));

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Enterprise :");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(309, 289, 146, -1));

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("UserName :");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(309, 373, 146, -1));

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Password :");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(309, 416, 146, -1));

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Name :");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(309, 330, 146, -1));

        cbNet.setBackground(new java.awt.Color(255, 156, 141));
        cbNet.setForeground(new java.awt.Color(255, 255, 255));
        cbNet.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbNet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbNetActionPerformed(evt);
            }
        });
        add(cbNet, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 245, 283, -1));

        cbEnter.setBackground(new java.awt.Color(255, 156, 141));
        cbEnter.setForeground(new java.awt.Color(255, 255, 255));
        cbEnter.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(cbEnter, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 286, 283, -1));

        txtUN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUNActionPerformed(evt);
            }
        });
        txtUN.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtUNKeyReleased(evt);
            }
        });
        add(txtUN, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 370, 283, -1));
        add(txtPwd, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 413, 283, -1));
        add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 327, 283, -1));

        btnSubmit.setBackground(new java.awt.Color(255, 156, 141));
        btnSubmit.setForeground(new java.awt.Color(255, 255, 255));
        btnSubmit.setText("Submit");
        btnSubmit.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });
        add(btnSubmit, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 480, 170, 30));
        add(lblPwdValid, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 413, 219, 27));

        lblUN.setText(" ");
        add(lblUN, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 368, 219, 27));
        add(lblI, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 580, 170, 140));
    }// </editor-fold>//GEN-END:initComponents

    private void txtUNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUNActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
       
        String passwordToHash = String.valueOf(txtPwd.getText());
        String password_ = null;
        boolean upCase = false;
        boolean loCase = false;
        boolean isDigit = false;
        boolean spChar = false;
        if (!passwordToHash.equals("")) {
            String SPECIAL_CHARACTERS = "!@#$%^&*()~`-=_+[]{}|:\";',./<>?";

            password_ = passwordToHash.trim();
            char[] aC = password_.toCharArray();
            for (char c : aC) {
                if (Character.isUpperCase(c)) {
                    upCase = true;
                } else if (Character.isLowerCase(c)) {
                    loCase = true;
                } else if (Character.isDigit(c)) {
                    isDigit = true;
                } else if (SPECIAL_CHARACTERS.indexOf(String.valueOf(c)) >= 0) {
                    spChar = true;
                }
            }
        }
        
        
//        String password = txtPwd.getText();
        
        
        if (txtUN.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter User Name.");
        } 
        else if (txtPwd.equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter Password.");
        } 
        else if (txtName.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter  Name.");
        } 
        else if ((password_.length() > 15) || (password_.length() < 5)) {
            JOptionPane.showMessageDialog(null, "Password must have minimum lenght 3 and maximum length 7");
//            lblPwdValid.setText("Password must have minimum lenght of 5 and maximum length of 15");
        } 
        else if (upCase == false) {
            JOptionPane.showMessageDialog(null, "Password must have one Upper case");
//            lblPwdValid.setText("Password must have one Upper case");
        } 
        else if (loCase == false) {
            JOptionPane.showMessageDialog(null, "Password must have one Lower case");
//            lblPwdValid.setText("Password must have one Lower case");
        } 
        else if (isDigit == false) {
            JOptionPane.showMessageDialog(null, "Password must have one Digit");
//            lblPwdValid.setText("Password must have one Digit");
        } 
        else if (spChar == false) {
            JOptionPane.showMessageDialog(null, "Password must have one Special Character");
//            lblPwdValid.setText("Password must have one Special Character");
        }
        else 
        {

            Enterprise enterprise = (Enterprise) cbEnter.getSelectedItem();

            String username = txtUN.getText();
            String password = txtPwd.getText();
            String name = txtName.getText().toUpperCase();

            Employee employee = enterprise.getEmployeeDirectory().createEmployee(name);

            UserAccount account = null;
            if (enterprise.getEnterpriseType() == Enterprise.EnterpriseType.CDC) {
                account = enterprise.getUserAccountDirectory().createUserAccount(username, password, employee, new CDCAdminRole());
            }
            if (enterprise.getEnterpriseType() == Enterprise.EnterpriseType.Distributor) {
                account = enterprise.getUserAccountDirectory().createUserAccount(username, password, employee, new DistributorAdminRole());
            }
            if (enterprise.getEnterpriseType() == Enterprise.EnterpriseType.Hospital) {
                account = enterprise.getUserAccountDirectory().createUserAccount(username, password, employee, new HospitalAdminRole());
            }
            if (enterprise.getEnterpriseType() == Enterprise.EnterpriseType.PHD) {
                account = enterprise.getUserAccountDirectory().createUserAccount(username, password, employee, new PHDAdminRole());
            }
            if (enterprise.getEnterpriseType() == Enterprise.EnterpriseType.Insuarance) {
                account = enterprise.getUserAccountDirectory().createUserAccount(username, password, employee, new InsuaranceAdminRole());
            }

            populateTable();
            
            txtUN.setText("");
            txtPwd.setText("");
            txtName.setText("");
            JOptionPane.showMessageDialog(null, "User Account created successfully.", "Warning", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void cbNetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbNetActionPerformed
        // TODO add your handling code here:
        
        Network network = (Network) cbNet.getSelectedItem();
        
        if (network != null){
            populateCBEnterprise(network);
        }
    }//GEN-LAST:event_cbNetActionPerformed

    private void txtUNKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUNKeyReleased
        // TODO add your handling code here:
        
        Enterprise enterprise = (Enterprise) cbEnter.getSelectedItem();
        String un = txtUN.getText().toUpperCase();
        boolean isExist = enterprise.getUserAccountDirectory().isUserNameExist(un);

        if(isExist){
            lblUN.setText("UserName Already Taken.");
        }
        else{
            lblUN.setText("");
        }
    }//GEN-LAST:event_txtUNKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSubmit;
    private javax.swing.JComboBox cbEnter;
    private javax.swing.JComboBox cbNet;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblI;
    private javax.swing.JLabel lblPwdValid;
    private javax.swing.JLabel lblUN;
    private javax.swing.JTable tblEnterprise;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPwd;
    private javax.swing.JTextField txtUN;
    // End of variables declaration//GEN-END:variables
}
